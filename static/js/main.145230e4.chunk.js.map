{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","autofocus","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.145230e4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        className=\"form__input\"\r\n        autofocus placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <button className=\"form__button\"> Dodaj zadanie</button>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({tasks, hideDone, removeTask, toggleTaskDone}) => (\r\n    <ul className=\"tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item${task.done && hideDone\r\n                        ? \" tasks__item--hidden\"\r\n                        : \"\"}`\r\n                }\r\n            >\r\n                <button \r\n                className=\"tasks__button tasks__button--toggleDone\"\r\n                onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ”\" : \" \"}\r\n                </button>\r\n                <span className={`tasks__content${task.done ? \"tasks__content--done\" : \"\"}`}>\r\n                    {task.content}\r\n                </span>\r\n                <button\r\n                    className=\"tasks__button tasks__button--remove\"\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <div className=\"buttons\">\r\n            <button onClick={toggleHideDone} className=\"buttons__button\">\r\n                {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n            </button>\r\n            <button\r\n            onClick={setAllDone}\r\n                className=\"buttons__button\"\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                UkoÅ„cz wszystkie\r\n            </button>\r\n        </div>\r\n    )\r\n)\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n<section className=\"section\">\r\n          <header className=\"section__header\">\r\n            <h2>{title}</h2>\r\n            {extraHeaderContent}\r\n          </header>\r\n          <div className=\"section__body\"></div>\r\n          {body}\r\n        </section>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n          <h1 className=\"container__header\">{title}</h1>\r\n        </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\"\r\n\r\nconst Container = ({children}) => (\r\n<main className=\"container\">\r\n    {children}\r\n</main>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState } from \"react\";\n\nfunction App() {\nconst [hideDone, setHideDone] = useState(false);\nconst [tasks, setTasks] = useState([\n  { id: 1, content: \"ZjeÅ›Ä‡\", done: true },\n  { id: 2, content: \"UmyÄ‡ siÄ™\", done: false },\n]);\n\nconst toggleHideDone =() => {\n  setHideDone(hideDone => !hideDone);\n};\n\nconst removeTask = (id) => {\n  setTasks(tasks => tasks.filter(task=> task.id !== id));\n};\n\nconst toggleTaskDone = (id) => {\n  setTasks(tasks => tasks.map(task => {\n    if(task.id === id)\n   {\n     return { ...task, done: !task.done}\n   }\n\n   return task;\n  }))\n};\n\nconst setAllDone = () => {\n  setTasks(tasks => tasks.map(task => ({\n    ...task,\n    done: true,\n  })));\n};\n\nconst addNewTask = (content) => {\n  setTasks(tasks=> [\n    ...tasks,\n    {\n      content,\n      done: false,\n      id: tasks.length ? tasks[tasks.length -1].id + 1 : 1,\n    }\n  ])\n}\n\n  return (\n    <div>\n      <Container>\n        <Header \n        title=\"Lista zadaÅ„\"\n        />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title=\"Lista zadaÅ„\"\n          body={\n          <Tasks\n          tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone}\n          />}\n          extraHeaderContent={\n          <Buttons\n          tasks={tasks}\n          hideDone={hideDone}\n          toggleHideDone={toggleHideDone}\n          setAllDone={setAllDone}\n          />}\n        />\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}